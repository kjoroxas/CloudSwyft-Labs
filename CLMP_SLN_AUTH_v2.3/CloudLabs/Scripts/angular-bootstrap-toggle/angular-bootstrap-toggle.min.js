!function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{on:"On",off:"Off",size:"",onstyle:"btn-primary",offstyle:"btn-default",style:"",ngDisabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","toggleConfig","$toggleSuppressError",function(e,t,n,l,s,a){var o=this,i={$setViewValue:angular.noop};angular.forEach(["on","off","size","onstyle","offstyle","style","ngDisabled"],function(l,a){o[l]=angular.isDefined(t[l])?6>a?n(t[l])(e.$parent):e.$parent.$eval(t[l]):s[l]}),this.init=function(n){i=n,o.computeStyle(),i.$render=function(){o.toggle()},i.$viewChangeListeners.push(function(){e.$eval(t.ngChange)})},this.computeStyle=function(){var t=o.element.find("label");angular.element(t[0]).html(o.on),angular.element(t[1]).html(o.off);var n=o.element.find("span"),l=o.width||Math.max(t[0].offsetWidth,t[1].offsetWidth)+n[0].offsetWidth/2,s=o.height||Math.max(t[0].offsetHeight,t[1].offsetHeight),a=o.element.find("div"),i=a[0].offsetWidth,r=a[1].offsetHeight;e.wrapperStyle={},l>i?e.wrapperStyle.width=l+"px":e.wrapperStyle.width=i+"px",s>r&&"btn-xs"!==o.size&&"btn-sm"!==o.size?e.wrapperStyle.height=s+"px":e.wrapperStyle.height=r+"px",e.onClass=[o.onstyle,o.size,"toggle-on"],e.offClass=[o.offstyle,o.size,"toggle-off"],e.handleClass=[o.size,"toggle-handle"],e.disabled=o.ngDisabled},this.toggle=function(){angular.isDefined(i.$viewValue)?this.isOn=i.$viewValue:this.isOn=!1,this.isOn?e.wrapperClass=[o.onstyle,o.size,o.style]:e.wrapperClass=[o.offstyle,"off ",o.size,o.style]},e.onSwitch=function(t){e.disabled||(i.$setViewValue(!i.$viewValue),i.$render())},angular.forEach(["ngModel"],function(n){var l=e.$parent.$watch(t[n],function(e){i.$render()});e.$parent.$on("$destroy",function(){l()})}),angular.forEach(["ngDisabled"],function(n){var l=e.$parent.$watch(t[n],function(e){o.ngDisabled!==e&&(o.ngDisabled=e,o.computeStyle())});e.$parent.$on("$destroy",function(){l()})}),angular.forEach(["on","off","size","onstyle","offstyle","style"],function(e){t.$observe(e,function(t){o[e]!==t&&(o[e]=t,o.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",transclude:!0,template:'<div class="toggle btn" ng-class="wrapperClass" ng-style="wrapperStyle" ng-click="onSwitch()" ng-disabled="disabled"><div class="toggle-group" style="padding:0"><label class="btn" ng-class="onClass" ng-disabled="disabled"></label><label class="btn active" ng-class="offClass" ng-disabled="disabled"></label><span class="btn btn-default" ng-class="handleClass" ng-disabled="disabled"></span></div></div>',scope:{bindModel:"=ngModel"},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,t,n){return{pre:function(e,t,n,l){var s=l[0],a=l[1];s.element=t,s.init(a)},post:function(){}}}}})}(),function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{on:"On",off:"Off",size:"",onstyle:"btn-primary",offstyle:"btn-default",style:"",ngDisabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","toggleConfig","$toggleSuppressError",function(e,t,n,l,s,a){var o=this,i={$setViewValue:angular.noop};angular.forEach(["on","off","size","onstyle","offstyle","style","ngDisabled"],function(l,a){o[l]=angular.isDefined(t[l])?6>a?n(t[l])(e.$parent):e.$parent.$eval(t[l]):s[l]}),this.init=function(n){i=n,o.computeStyle(),i.$render=function(){o.toggle()},i.$viewChangeListeners.push(function(){e.$eval(t.ngChange)})},this.computeStyle=function(){var t=o.element.find("label");angular.element(t[0]).html(o.on),angular.element(t[1]).html(o.off);var n=o.element.find("span"),l=o.width||Math.max(t[0].offsetWidth,t[1].offsetWidth)+n[0].offsetWidth/2,s=o.height||Math.max(t[0].offsetHeight,t[1].offsetHeight),a=o.element.find("div"),i=a[0].offsetWidth,r=a[1].offsetHeight;e.wrapperStyle={},l>i?e.wrapperStyle.width=l+"px":e.wrapperStyle.width=i+"px",s>r&&"btn-xs"!==o.size&&"btn-sm"!==o.size?e.wrapperStyle.height=s+"px":e.wrapperStyle.height=r+"px",e.onClass=[o.onstyle,o.size,"toggle-on"],e.offClass=[o.offstyle,o.size,"toggle-off"],e.handleClass=[o.size,"toggle-handle"],e.disabled=o.ngDisabled},this.toggle=function(){angular.isDefined(i.$viewValue)?this.isOn=i.$viewValue:this.isOn=!1,this.isOn?e.wrapperClass=[o.onstyle,o.size,o.style]:e.wrapperClass=[o.offstyle,"off ",o.size,o.style]},e.onSwitch=function(t){e.disabled||(i.$setViewValue(!i.$viewValue),i.$render())},angular.forEach(["ngModel"],function(n){var l=e.$parent.$watch(t[n],function(e){i.$render()});e.$parent.$on("$destroy",function(){l()})}),angular.forEach(["ngDisabled"],function(n){var l=e.$parent.$watch(t[n],function(e){o.ngDisabled!==e&&(o.ngDisabled=e,o.computeStyle())});e.$parent.$on("$destroy",function(){l()})}),angular.forEach(["on","off","size","onstyle","offstyle","style"],function(e){t.$observe(e,function(t){o[e]!==t&&(o[e]=t,o.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",transclude:!0,template:'<div class="toggle btn" ng-class="wrapperClass" ng-style="wrapperStyle" ng-click="onSwitch()" ng-disabled="disabled"><div class="toggle-group"><label class="btn" ng-class="onClass" ng-disabled="disabled"></label><label class="btn active" ng-class="offClass" ng-disabled="disabled"></label><span class="btn btn-default" ng-class="handleClass" ng-disabled="disabled"></span></div></div>',scope:{bindModel:"=ngModel"},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,t,n){return{pre:function(e,t,n,l){var s=l[0],a=l[1];s.element=t,s.init(a)},post:function(){}}}}})}();